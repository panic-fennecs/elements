[gd_scene load_steps=4 format=2]

[ext_resource path="res://src/level/ElementRenderer.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform float elapsed_time;
uniform vec2 canvas_size;
uniform sampler2D fluid_tex;
uniform sampler2D solid_tex;

float smin( float a, float b, float k )
{
    float h = max( k-abs(a-b), 0.0 )/k;
    return min( a, b ) - h*h*k*(1.0/4.0);
}

float circle(vec2 p) {
	return length(p);
}

void fragment() {
	float aspect_ratio = canvas_size.x / canvas_size.y;
	vec2 aspect = vec2(aspect_ratio, 1);
	vec2 uv = vec2(UV.x * aspect_ratio, UV.y);
	COLOR = vec4(.09, .17, .22, 1);

	vec4 solid = texture(solid_tex, UV);
	if (solid.r > 0.) {
		float highlight = sin((uv.x + uv.y) * 50.) * 1.8;
		highlight = min(1., highlight) - fract(max(0., highlight - 1.)); // fold
		highlight = highlight > .85 ? 1. : 0.;
		highlight *= sin((uv.x + uv.y * .12) * 60.) * .5 + .5;
		highlight *= sin((uv.y + uv.x * .42) * 40.) * .5 + .5;
		COLOR.rgb = vec3(.5, .7, 1) * vec3(1. + .1 * highlight);
	} else {
		float d = 1000.;
		for (int x = 0; x < textureSize(fluid_tex, 0).x; ++x) {
			vec4 fluid = texture(fluid_tex, vec2(float(x) / 128., .0));
			if (fluid.b == 0.)
				break;
			vec2 fluid_pos = fluid.xy * aspect;
			d = smin(d, circle(uv - fluid_pos) - .01, .075);
		}

		float height = sin((uv.x + uv.y) * 20.  + elapsed_time * 5.) * .5 + .5;
		vec3 border_color = vec3(.2, .5, .8);
		vec3 deep_color = vec3(.1, .3, .6) * vec3(1. + .2 * height);

		COLOR.rgb += mix(
				border_color,
				deep_color,
				clamp(0., 1., -d * 100.))
			* smoothstep(SCREEN_PIXEL_SIZE.y, .0, d);
	}
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/elapsed_time = null
shader_param/canvas_size = null

[node name="ElementRenderer" type="Node2D"]
script = ExtResource( 1 )

[node name="Canvas" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_right = 1280.0
margin_bottom = 720.0
size_flags_horizontal = 0
size_flags_vertical = 0
__meta__ = {
"_edit_use_anchors_": false
}
