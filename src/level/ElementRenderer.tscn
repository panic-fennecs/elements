[gd_scene load_steps=4 format=2]

[ext_resource path="res://src/level/ElementRenderer.gd" type="Script" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;

uniform vec2 canvas_size;
uniform sampler2D elements;

float circle(vec2 p) {
	return length(p);
}

void fragment() {
	float aspect_ratio = canvas_size.x / canvas_size.y;
	vec2 uv = vec2(UV.x * aspect_ratio, UV.y);

	float d = circle(uv - vec2(.2, .2));
	d = min(d, circle(uv - vec2(.6, .4)));

	d = smoothstep(.3 + SCREEN_PIXEL_SIZE.y, .3, d);
	COLOR = vec4(0, 0, 0, 1);
	//COLOR += d * vec4(.2, .4, .8, 1);
	//COLOR.r += smoothstep(.5, .51, uv.x);
	//COLOR.b += smoothstep(.5, .51, uv.y);
	//COLOR.g += max(0., dot(texture(elements, uv).rgb, vec3(1)));
	//COLOR.g += max(0., dot(texture(elements, uv * .1).rgb, vec3(1)));
	//COLOR.g += max(0., dot(texture(elements, uv * 10.).rgb, vec3(1)));
	COLOR.rgb += texture(elements, uv).rgb;
	COLOR.a *= .2;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/canvas_size = null

[node name="ElementRenderer" type="Node2D"]
script = ExtResource( 1 )

[node name="Canvas" type="ColorRect" parent="."]
material = SubResource( 2 )
margin_top = 1.0
margin_right = 1028.0
margin_bottom = 606.0
__meta__ = {
"_edit_use_anchors_": false
}
